// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220328075959_AddOrderToQuestions")]
    partial class AddOrderToQuestions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Infrastructure.Entities.InterviewQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InterviewQuestions");
                });

            modelBuilder.Entity("Infrastructure.Entities.QuestionList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("QuestionLists");
                });

            modelBuilder.Entity("Infrastructure.Entities.QuestionListInterviewQuestion", b =>
                {
                    b.Property<int>("QuestionListId")
                        .HasColumnType("int");

                    b.Property<int>("InterviewQuestionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("QuestionListId", "InterviewQuestionId");

                    b.HasIndex("InterviewQuestionId");

                    b.ToTable("QuestionListInterviewQuestions");
                });

            modelBuilder.Entity("Infrastructure.Entities.QuestionListInterviewQuestion", b =>
                {
                    b.HasOne("Infrastructure.Entities.InterviewQuestion", "InterviewQuestion")
                        .WithMany("QuestionListInterviewQuestions")
                        .HasForeignKey("InterviewQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.Entities.QuestionList", "QuestionList")
                        .WithMany("QuestionListInterviewQuestions")
                        .HasForeignKey("QuestionListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InterviewQuestion");

                    b.Navigation("QuestionList");
                });

            modelBuilder.Entity("Infrastructure.Entities.InterviewQuestion", b =>
                {
                    b.Navigation("QuestionListInterviewQuestions");
                });

            modelBuilder.Entity("Infrastructure.Entities.QuestionList", b =>
                {
                    b.Navigation("QuestionListInterviewQuestions");
                });
#pragma warning restore 612, 618
        }
    }
}
