// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220125102426_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Infrastructure.Entities.InterviewQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InterviewQuestions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "C# concept basics",
                            Content = "Describe structures on code example",
                            Difficulty = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = "C# concept basics",
                            Content = "What are classes and interfaces?",
                            Difficulty = 1
                        },
                        new
                        {
                            Id = 3,
                            Category = "C# concept basics",
                            Content = "What access modifiers do you know? (private vs public vs protected)",
                            Difficulty = 1
                        },
                        new
                        {
                            Id = 4,
                            Category = "C# concept basics",
                            Content = "What is Encapsulation?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 5,
                            Category = "C# concept basics",
                            Content = "What is Inheritance?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 6,
                            Category = "C# concept basics",
                            Content = "What is Polymorphism?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 7,
                            Category = "C# concept basics",
                            Content = "What is the difference between Abstract class and interface?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 8,
                            Category = "C# concept basics",
                            Content = "Do you know these acronyms SOLID / CUPID?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 9,
                            Category = "C# concept basics",
                            Content = "What is overriding and overloading?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 10,
                            Category = "C# concept basics",
                            Content = "What is meant by “composition over inheritance” ?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 11,
                            Category = "C# concept basics",
                            Content = "What is a generic class/data type?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 12,
                            Category = "C# concept basics",
                            Content = "What's the difference between reference data type and value data type?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 13,
                            Category = "C# concept basics",
                            Content = "What design patterns do you know? ",
                            Difficulty = 4
                        },
                        new
                        {
                            Id = 14,
                            Category = "C# concept basics",
                            Content = "Factory, Singleton, Builder, Strategy?",
                            Difficulty = 4
                        },
                        new
                        {
                            Id = 15,
                            Category = "C# concept basics",
                            Content = "What other programming paradigms do you know?",
                            Difficulty = 5
                        },
                        new
                        {
                            Id = 16,
                            Category = ".NET specific",
                            Content = "What is your experience with testing? ",
                            Difficulty = 1
                        },
                        new
                        {
                            Id = 17,
                            Category = ".NET specific",
                            Content = "What is the difference between unit, integration and e2e testing?",
                            Difficulty = 1
                        },
                        new
                        {
                            Id = 18,
                            Category = ".NET specific",
                            Content = "What other testing approaches do you know?",
                            Difficulty = 1
                        },
                        new
                        {
                            Id = 19,
                            Category = ".NET specific",
                            Content = "What does AAA mean in unit tests?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 20,
                            Category = ".NET specific",
                            Content = "What is mock and fixture?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 21,
                            Category = ".NET specific",
                            Content = "What is relationship between .NET and C#?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 22,
                            Category = ".NET specific",
                            Content = "What frameworks did you work with?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 23,
                            Category = ".NET specific",
                            Content = "What is the difference between .NET Framework, .NET Core and .NET?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 24,
                            Category = ".NET specific",
                            Content = "What does the keyword sealed before class mean?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 25,
                            Category = ".NET specific",
                            Content = "What about other keywords? Virtual, Abstract, Override",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 26,
                            Category = ".NET specific",
                            Content = "What is the difference between Class, Struct and Record?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 27,
                            Category = ".NET specific",
                            Content = "What is a constant?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 28,
                            Category = ".NET specific",
                            Content = "What is the difference between constant and readonly property?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 29,
                            Category = ".NET specific",
                            Content = "What is difference between readonly property and property with private set",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 30,
                            Category = ".NET specific",
                            Content = "What is asynchronous programming?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 31,
                            Category = ".NET specific",
                            Content = "How can this be implemented in .NET? ",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 32,
                            Category = ".NET specific",
                            Content = "What is Multithreading, processes, threads, locks ?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 33,
                            Category = ".NET specific",
                            Content = "What is a garbage collector?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 34,
                            Category = ".NET specific",
                            Content = "What are the differences between ref and out keywords ?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 35,
                            Category = ".NET specific",
                            Content = "Describe .NET build process",
                            Difficulty = 5
                        },
                        new
                        {
                            Id = 36,
                            Category = ".NET specific",
                            Content = "Describe items in the .NET ecosystem? (Solution, assembly, project)",
                            Difficulty = 4
                        },
                        new
                        {
                            Id = 37,
                            Category = ".NET specific",
                            Content = "What does access modifier internal mean?",
                            Difficulty = 4
                        },
                        new
                        {
                            Id = 38,
                            Category = ".NET specific",
                            Content = "Describe acronyms JIT, CLS, CIL, CLR, AOT compilation",
                            Difficulty = 5
                        },
                        new
                        {
                            Id = 39,
                            Category = ".NET specific",
                            Content = "What is a delegate and event? ",
                            Difficulty = 4
                        },
                        new
                        {
                            Id = 40,
                            Category = ".NET specific",
                            Content = "What is data type Action and Func?",
                            Difficulty = 4
                        },
                        new
                        {
                            Id = 41,
                            Category = "SQL",
                            Content = "Define what is a relational database?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 42,
                            Category = "SQL",
                            Content = "What is a stored procedure?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 43,
                            Category = "SQL",
                            Content = "What is an index?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 44,
                            Category = "SQL",
                            Content = "What is a code first and schema first approach?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 45,
                            Category = "SQL",
                            Content = "What are common problems in relational databases?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 46,
                            Category = "ORMS",
                            Content = "Define what is an ORM?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 47,
                            Category = "ORMS",
                            Content = "Do you know any diagnostic tools? (transactions,  N+1, Indexing, searching)",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 48,
                            Category = "NOSQL",
                            Content = "What is NoSQL?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 49,
                            Category = "NOSQL",
                            Content = "What is index, document, shard in ElasticSearch?",
                            Difficulty = 4
                        },
                        new
                        {
                            Id = 50,
                            Category = "EF",
                            Content = "What is a Migration?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 51,
                            Category = "EF",
                            Content = "What's LINQ?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 52,
                            Category = "EF",
                            Content = "What is an Entity?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 53,
                            Category = "EF",
                            Content = "What is a Context?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 54,
                            Category = "Cloud/infrastructure as a service",
                            Content = "Experience with specific cloud providers?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 55,
                            Category = "Cloud/infrastructure as a service",
                            Content = "CI/CD Pipelines?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 56,
                            Category = "Cloud/infrastructure as a service",
                            Content = "Docker?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 57,
                            Category = "Cloud/infrastructure as a service",
                            Content = "Kubernetes?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 58,
                            Category = "Cloud/infrastructure as a service",
                            Content = "Serverless?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 59,
                            Category = "Microservices",
                            Content = "Define microservices?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 60,
                            Category = "Microservices",
                            Content = "What is the difference between service oriented architecture?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 61,
                            Category = "Microservices",
                            Content = "Experience with development, deployment?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 62,
                            Category = "Microservices",
                            Content = "How would you set up communication between the individual services?",
                            Difficulty = 4
                        },
                        new
                        {
                            Id = 63,
                            Category = "Microservices",
                            Content = "PUB/SUB pattern?",
                            Difficulty = 4
                        },
                        new
                        {
                            Id = 64,
                            Category = "Version control",
                            Content = "Experience with different versioning software?",
                            Difficulty = 2
                        },
                        new
                        {
                            Id = 65,
                            Category = "Version control",
                            Content = "Merge vs Rebase vs Cherry Pick?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 66,
                            Category = "Version control",
                            Content = "What kind of workflows do you generally use?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 67,
                            Category = "Version control",
                            Content = "What is the biggest mistake one can do in Git?",
                            Difficulty = 3
                        },
                        new
                        {
                            Id = 68,
                            Category = "Design patterns",
                            Content = "Experience?",
                            Difficulty = 4
                        },
                        new
                        {
                            Id = 69,
                            Category = "Design patterns",
                            Content = "Any architecture / design pattern you would like to try out?",
                            Difficulty = 4
                        });
                });

            modelBuilder.Entity("Infrastructure.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
